source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
library("plyr", lib.loc="~/Documents/Development/morphessure/baseline/packrat/lib/x86_64-pc-linux-gnu/3.1.2")
install.packages("plyr")
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
plot(calcViaR())
calR = calcViaR()
crlR
calR
plot(calR$sVal)
plot(calR$sVal, calR$counts)
plot(calR$sVal)
plot(calR$sVal, calR$ref)
plot(calR$sVal)
dotchart(mtcars$mpg,labels=row.names(mtcars),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
dotchart(calR$sVal,labels=row.names(ref),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
dotchart(mtcars$mpg,labels=row.names(mtcars),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
dotchart(mtcars$mpg,labels=row.names(mtcars),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
dotchart(calR$sVal,labels=row.names(ref),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
dotchart(calR$sVal,labels=row.names(mtcars),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
dotchart(calR$sVal,labels=row.names(calR),cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
mtcars
dotchart(calR$sVal,labels=calR$ref,cex=.7,
main="Gas Milage for Car Models",
xlab="Miles Per Gallon")
calR
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/Documents/Development/morphessure/baseline/packrat/lib/x86_64-pc-linux-gnu/3.1.2")
install.packages("ggplot2")
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
packrat::restore(prompt = FALSE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mtcars
source('~/.active-rstudio-document', echo=TRUE)
mtcars2
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
install.packages("methods")
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
calcViaR()
source('~/Documents/Development/morphessure/baseline/baseline.r', echo=TRUE)
#Libraries
library(RSQLite) #to user sql in r
library(data.table)
library(plyr)
library(ggplot2)
library(gridExtra)
sqlite <- dbDriver("SQLite")
con <- dbConnect(sqlite,"baseline.db")
alltables = dbListTables(con)
synonyms = dbGetQuery( con,'select * from synonyms' )
valance = dbGetQuery( con,'select * from valance' )
calcViaDB = function(){
mymerge = merge(x = valance, y = synonyms, by.x = "wordId", by.y = "qualRef", all.x  = TRUE)
mymerge = mymerge[mymerge$word == 1,]
mymerge = mymerge[c("ref", "valance")]
temp1 = aggregate(mymerge$valance, by=list(ref = mymerge$ref), FUN = sum) #get sum
colnames(temp1)[2] = "sumVal"
temp2 = aggregate(cbind(counts = ref) ~ mymerge$ref, data = mymerge, FUN = function(x){NROW(x)});
colnames(temp2)[1] = 'ref'
mymerge = merge(x = temp1, y = temp2)
mymerge = ddply(mymerge, colnames(mymerge), summarize, sVal = sumVal/counts)
mymerge$sVal = mymerge$sumVal/mymerge$counts #same as previous line
return(mymerge);
}
calcViaR = function(){
mySumVal = dbGetQuery(con, 'select *, sumVal*1.0/counts as sVal from (Select ref, sum(valance) as sumVal, count(ref) as counts from valance LEFT JOIN synonyms ON wordId=qualRef where word = 1  GROUP BY ref);')
return(mySumVal);
}
calcViaDB();
calR = calcViaR();
dotchart(calR$sVal,labels=calR$ref,cex=.8,
main="Words",
xlab="Valance")
calR$ref <-factor(calR$ref, levels=calR[order(calR$sVal), "ref"])
x <-ggplot(calR, aes(y=ref, x=sVal)) +
geom_point(stat="identity")
grid.arrange(x)
